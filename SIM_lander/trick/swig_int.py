# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_swig_int', [dirname(__file__)])
        except ImportError:
            import _swig_int
            return _swig_int
        if fp is not None:
            try:
                _mod = imp.load_module('_swig_int', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _swig_int = swig_import_helper()
    del swig_import_helper
else:
    import _swig_int
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class swig_int(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, swig_int, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, swig_int, name)
    def __str__(self): return _swig_int.swig_int___str__(self)
    def __repr__(self): return _swig_int.swig_int___repr__(self)
    def __add__(self, *args): return _swig_int.swig_int___add__(self, *args)
    def __sub__(self, *args): return _swig_int.swig_int___sub__(self, *args)
    def __mul__(self, *args): return _swig_int.swig_int___mul__(self, *args)
    def __div__(self, *args): return _swig_int.swig_int___div__(self, *args)
    def __truediv__(self, *args): return _swig_int.swig_int___truediv__(self, *args)
    def __floordiv__(self, *args): return _swig_int.swig_int___floordiv__(self, *args)
    def __mod__(self, *args): return _swig_int.swig_int___mod__(self, *args)
    def __pow__(self, *args): return _swig_int.swig_int___pow__(self, *args)
    def __lshift__(self, *args): return _swig_int.swig_int___lshift__(self, *args)
    def __rshift__(self, *args): return _swig_int.swig_int___rshift__(self, *args)
    def __and__(self, *args): return _swig_int.swig_int___and__(self, *args)
    def __xor__(self, *args): return _swig_int.swig_int___xor__(self, *args)
    def __or__(self, *args): return _swig_int.swig_int___or__(self, *args)
    def __radd__(self, *args): return _swig_int.swig_int___radd__(self, *args)
    def __rsub__(self, *args): return _swig_int.swig_int___rsub__(self, *args)
    def __rmul__(self, *args): return _swig_int.swig_int___rmul__(self, *args)
    def __rdiv__(self, *args): return _swig_int.swig_int___rdiv__(self, *args)
    def __rtruediv__(self, *args): return _swig_int.swig_int___rtruediv__(self, *args)
    def __rfloordiv__(self, *args): return _swig_int.swig_int___rfloordiv__(self, *args)
    def __rmod__(self, *args): return _swig_int.swig_int___rmod__(self, *args)
    def __rpow__(self, *args): return _swig_int.swig_int___rpow__(self, *args)
    def __rlshift__(self, *args): return _swig_int.swig_int___rlshift__(self, *args)
    def __rrshift__(self, *args): return _swig_int.swig_int___rrshift__(self, *args)
    def __rand__(self, *args): return _swig_int.swig_int___rand__(self, *args)
    def __rxor__(self, *args): return _swig_int.swig_int___rxor__(self, *args)
    def __ror__(self, *args): return _swig_int.swig_int___ror__(self, *args)
    def __iadd__(self, *args): return _swig_int.swig_int___iadd__(self, *args)
    def __isub__(self, *args): return _swig_int.swig_int___isub__(self, *args)
    def __imul__(self, *args): return _swig_int.swig_int___imul__(self, *args)
    def __idiv__(self, *args): return _swig_int.swig_int___idiv__(self, *args)
    def __itruediv__(self, *args): return _swig_int.swig_int___itruediv__(self, *args)
    def __ifloordiv__(self, *args): return _swig_int.swig_int___ifloordiv__(self, *args)
    def __imod__(self, *args): return _swig_int.swig_int___imod__(self, *args)
    def __ipow__(self, *args): return _swig_int.swig_int___ipow__(self, *args)
    def __ilshift__(self, *args): return _swig_int.swig_int___ilshift__(self, *args)
    def __irshift__(self, *args): return _swig_int.swig_int___irshift__(self, *args)
    def __iand__(self, *args): return _swig_int.swig_int___iand__(self, *args)
    def __ixor__(self, *args): return _swig_int.swig_int___ixor__(self, *args)
    def __ior__(self, *args): return _swig_int.swig_int___ior__(self, *args)
    def __lt__(self, *args): return _swig_int.swig_int___lt__(self, *args)
    def __le__(self, *args): return _swig_int.swig_int___le__(self, *args)
    def __eq__(self, *args): return _swig_int.swig_int___eq__(self, *args)
    def __ne__(self, *args): return _swig_int.swig_int___ne__(self, *args)
    def __gt__(self, *args): return _swig_int.swig_int___gt__(self, *args)
    def __ge__(self, *args): return _swig_int.swig_int___ge__(self, *args)
    def __neg__(self): return _swig_int.swig_int___neg__(self)
    def __pos__(self): return _swig_int.swig_int___pos__(self)
    def __abs__(self): return _swig_int.swig_int___abs__(self)
    def __invert__(self): return _swig_int.swig_int___invert__(self)
    def __nonzero__(self): return _swig_int.swig_int___nonzero__(self)
    def __int__(self): return _swig_int.swig_int___int__(self)
    def __long__(self): return _swig_int.swig_int___long__(self)
    def __float__(self): return _swig_int.swig_int___float__(self)
    def __oct__(self): return _swig_int.swig_int___oct__(self)
    def __hex__(self): return _swig_int.swig_int___hex__(self)
    def __len__(self): return _swig_int.swig_int___len__(self)
    def __index__(self): return _swig_int.swig_int___index__(self)
    def __bool__(self): return _swig_int.swig_int___bool__(self)
    def __init__(self): 
        this = _swig_int.new_swig_int()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _swig_int.delete_swig_int
    __del__ = lambda self : None;
swig_int_swigregister = _swig_int.swig_int_swigregister
swig_int_swigregister(swig_int)

# This file is compatible with both classic and new-style classes.


