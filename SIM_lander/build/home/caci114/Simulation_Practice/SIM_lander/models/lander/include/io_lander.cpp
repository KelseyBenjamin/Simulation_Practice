/**
 * This file was automatically generated by the ICG based on the file:
 * /home/caci114/Simulation_Practice/SIM_lander/models/lander/include/lander.h
 * This file contains database parameter declarations specific to the
 * data structures and enumerated types declared in the above file.
 * These database parameters are used by the Trick input and
 * data recording processors to gain access to important simulation
 * variable information.
 */

#define TRICK_IN_IOSRC
#include <stdlib.h>
#include "trick/MemoryManager.hh"
#include "trick/attributes.h"
#include "trick/parameter_types.h"
#include "trick/ClassSizeCheck.hh"
#include "trick/UnitsMap.hh"
#include "trick/checkpoint_stl.hh"
#include "/home/caci114/Simulation_Practice/SIM_lander/models/lander/include/lander.h"

extern "C" {

ATTRIBUTES attrLander[] = {
{"pos", "double", "1", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  0, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"vel", "double", "1", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  16, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"acc", "double", "1", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  32, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"angle", "double", "1", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  48, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"angleDot", "double", "1", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  56, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"angleDDot", "double", "1", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  64, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"thrust", "double", "1", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  72, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"throttle", "double", "1", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  80, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"rcs_command", "int", "1", "", "",
  "",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 0,
  88, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"thrust_max", "double", "1", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  96, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"rcs_torque", "double", "1", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  104, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"mass", "double", "1", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  112, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"moment_of_inertia", "double", "1", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  120, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"g", "double", "1", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  128, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"manual_throttle_change_command", "int", "1", "", "",
  "",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 0,
  136, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"manual_rcs_command", "int", "1", "", "",
  "",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 0,
  140, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"Auto_1", "int", "1", "", "",
  "",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 0,
  144, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"Auto_2", "int", "1", "", "",
  "",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 0,
  148, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"survive", "bool", "1", "", "",
  "",
  15,TRICK_BOOLEAN, sizeof(bool), 0, 0, Language_CPP, 0,
  152, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"good_land", "bool", "1", "", "",
  "",
  15,TRICK_BOOLEAN, sizeof(bool), 0, 0, Language_CPP, 0,
  153, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"


void init_attrLander() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

}

extern "C" {

void init_attrLander_c_intf() {
    init_attrLander() ;
}

size_t io_src_sizeof_Lander() {
    return sizeof(Lander) ;
}

void* io_src_allocate_Lander(int num) {
    Lander* temp = (Lander*)calloc(num, sizeof(Lander));
    return (void*)temp;
}

void io_src_destruct_Lander(void* address __attribute__((unused)), int num __attribute__((unused))) {
}

void io_src_delete_Lander(void* address __attribute__((unused))) {}

} //extern "C"

struct UnitsMapLander {
    UnitsMapLander() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("Lander_pos", "1") ;
        units_map_ptr->add_param("Lander_vel", "1") ;
        units_map_ptr->add_param("Lander_acc", "1") ;
        units_map_ptr->add_param("Lander_angle", "1") ;
        units_map_ptr->add_param("Lander_angleDot", "1") ;
        units_map_ptr->add_param("Lander_angleDDot", "1") ;
        units_map_ptr->add_param("Lander_thrust", "1") ;
        units_map_ptr->add_param("Lander_throttle", "1") ;
        units_map_ptr->add_param("Lander_rcs_command", "1") ;
        units_map_ptr->add_param("Lander_thrust_max", "1") ;
        units_map_ptr->add_param("Lander_rcs_torque", "1") ;
        units_map_ptr->add_param("Lander_mass", "1") ;
        units_map_ptr->add_param("Lander_moment_of_inertia", "1") ;
        units_map_ptr->add_param("Lander_g", "1") ;
        units_map_ptr->add_param("Lander_manual_throttle_change_command", "1") ;
        units_map_ptr->add_param("Lander_manual_rcs_command", "1") ;
        units_map_ptr->add_param("Lander_Auto_1", "1") ;
        units_map_ptr->add_param("Lander_Auto_2", "1") ;
        units_map_ptr->add_param("Lander_survive", "1") ;
        units_map_ptr->add_param("Lander_good_land", "1") ;
    }
} umLander;

